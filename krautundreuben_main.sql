DROP DATABASE IF EXISTS krautundrueben;
CREATE DATABASE IF NOT EXISTS krautundrueben ;
USE krautundrueben;

Create Table Ort (
	IDOrt int not null auto_increment,
    constraint PK_IDOrt primary key (IDOrt),
    PLZ Varchar (20),
    Ort Varchar (155)
);

Create Table Adresse (
	IDAdresse int not null auto_increment,
    constraint PK_IDAdresse Primary key (IDAdresse),
    Strasse Varchar (155),
    HausNr varchar (50),
    IDOrt int not null
);	

CREATE TABLE KUNDE (
    KUNDENNR        INT NOT NULL PRIMARY KEY,
    NACHNAME        VARCHAR(50),
    VORNAME         VARCHAR(50),
    GEBURTSDATUM    DATE,
    IDADRESSE		INT NOT NULL,
    TELEFON         VARCHAR(25),
    EMAIL           VARCHAR(50)
);

CREATE TABLE ZUTAT (
    ZUTATENNR       INTEGER NOT NULL PRIMARY KEY,
    BEZEICHNUNG     VARCHAR(50),
    EINHEIT         VARCHAR(25),
    NETTOPREIS      DECIMAL(10 , 2 ),
    BESTAND         INTEGER,
    LIEFERANT       INTEGER,
    KALORIEN        INTEGER,
    KOHLENHYDRATE   DECIMAL(10 , 2 ),
    PROTEIN         DECIMAL(10 , 2 )
);

CREATE TABLE REZEPTZUTAT (
	REZEPTNR        INT NOT NULL,
    ZUTATENNR       INT NOT NULL,
    PRIMARY KEY(REZEPTNR, ZUTATENNR)
);

CREATE TABLE REZEPTBESTELL (
	REZEPTNR        INT NOT NULL,
	BESTELLNR       INT NOT NULL,
    PRIMARY KEY(REZEPTNR, BESTELLNR)
);

CREATE TABLE REZEPT (
	REZEPTNR        INT NOT NULL PRIMARY KEY,
    BEZEICHNUNG     VARCHAR(50)
);

CREATE TABLE KATEGORIE  (
	KATEGORIENR     INT NOT NULL PRIMARY KEY,
    BEZEICHNUNG     VARCHAR(50)
);

CREATE TABLE KATEGORIEREZEPT(
    KATEGORIENR     INT NOT NULL,
    REZEPTNR        INT NOT NULL,
    PRIMARY KEY(KATEGORIENR, REZEPTNR)
);

CREATE TABLE BESTELLUNG (
    BESTELLNR       INTEGER AUTO_INCREMENT NOT NULL,
    KUNDENNR        INTEGER,
    BESTELLDATUM    DATE,
    RECHNUNGSBETRAG DECIMAL(10 , 2 ),
    PRIMARY KEY(BESTELLNR)
);

CREATE TABLE BESTELLZUTAT (
    BESTELLNR       INTEGER NOT NULL,
    ZUTATENNR       INTEGER,
    MENGE           INTEGER,
    PRIMARY KEY(BESTELLNR, ZUTATENNR)
);


CREATE TABLE LIEFERANT (
    LIEFERANTENNR   INTEGER NOT NULL PRIMARY KEY,
    LIEFERANTENNAME VARCHAR(50),
    IDADRESSE		INT NOT NULL,
    TELEFON         VARCHAR(25),
    EMAIL           VARCHAR(50)
);





/******************************************************************************/
/***                              Foreign Keys                              ***/
/******************************************************************************/

ALTER TABLE ZUTAT ADD FOREIGN KEY (LIEFERANT) REFERENCES LIEFERANT (LIEFERANTENNR);
ALTER TABLE BESTELLUNG ADD FOREIGN KEY (KUNDENNR) REFERENCES KUNDE (KUNDENNR);
ALTER TABLE BESTELLZUTAT ADD FOREIGN KEY (BESTELLNR) REFERENCES BESTELLUNG (BESTELLNR);
ALTER TABLE BESTELLZUTAT ADD FOREIGN KEY (ZUTATENNR) REFERENCES ZUTAT (ZUTATENNR);
ALTER TABLE REZEPTZUTAT ADD FOREIGN KEY (ZUTATENNR) REFERENCES ZUTAT(ZUTATENNR);
ALTER TABLE REZEPTZUTAT ADD FOREIGN KEY (REZEPTNR) REFERENCES REZEPT(REZEPTNR);
ALTER TABLE REZEPTBESTELL ADD FOREIGN KEY (BESTELLNR) REFERENCES BESTELLUNG (BESTELLNR);
ALTER TABLE REZEPTBESTELL ADD FOREIGN KEY (REZEPTNR) REFERENCES REZEPT (REZEPTNR);
ALTER TABLE KATEGORIEREZEPT ADD FOREIGN KEY (KATEGORIENR) REFERENCES KATEGORIE (KATEGORIENR);
ALTER TABLE KATEGORIEREZEPT ADD FOREIGN KEY (REZEPTNR) REFERENCES REZEPT (REZEPTNR);
Alter Table Adresse Add Foreign Key (IDOrt) references Ort(IDOrt);
Alter Table Kunde Add Foreign Key (IDAdresse) references Adresse(IDAdresse);
Alter Table Lieferant Add Foreign Key (IDAdresse) references Adresse(IDAdresse);
